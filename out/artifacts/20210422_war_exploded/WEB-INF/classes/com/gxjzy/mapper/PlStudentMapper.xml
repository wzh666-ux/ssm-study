<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gxjzy.dao.PlStudentMapper">
  <resultMap id="BaseResultMap" type="com.gxjzy.domain.PlStudent">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="classes" jdbcType="VARCHAR" property="classes" />
    <result column="cert" jdbcType="VARCHAR" property="cert" />
    <result column="adress" jdbcType="VARCHAR" property="adress" />
  </resultMap>
  <select id="list" resultType="com.gxjzy.domain.PlStudent">
        select * from pl_student
  </select>
  <!--    分页和搜索结果的查询-->
  <select id="getListView" resultType="com.gxjzy.domain.PlStudent">
        select * from pl_student ${param3} limit #{param1},#{param2}
    </select>
  <!--    查询总的条数-->
  <select id="getListCount" parameterType="String" resultType="int">
        select count(*) from pl_student ${where}
  </select>
  <sql id="Base_Column_List">
    id, name, age, classes, cert, adress
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pl_student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="String">
    delete from pl_student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.gxjzy.domain.PlStudent">
    insert into pl_student (id, name, age, 
      classes, cert, adress
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{classes,jdbcType=VARCHAR}, #{cert,jdbcType=VARCHAR}, #{adress,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gxjzy.domain.PlStudent">
    insert into pl_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="classes != null">
        classes,
      </if>
      <if test="cert != null">
        cert,
      </if>
      <if test="adress != null">
        adress,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="classes != null">
        #{classes,jdbcType=VARCHAR},
      </if>
      <if test="cert != null">
        #{cert,jdbcType=VARCHAR},
      </if>
      <if test="adress != null">
        #{adress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gxjzy.domain.PlStudent">
    update pl_student
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="classes != null">
        classes = #{classes,jdbcType=VARCHAR},
      </if>
      <if test="cert != null">
        cert = #{cert,jdbcType=VARCHAR},
      </if>
      <if test="adress != null">
        adress = #{adress,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gxjzy.domain.PlStudent">
    update pl_student
    set name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      classes = #{classes,jdbcType=VARCHAR},
      cert = #{cert,jdbcType=VARCHAR},
      adress = #{adress,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <delete id="deleteBatch" parameterType="java.util.List">
    delete from pl_student where id in
    <foreach collection="plStudents" item="item" open="(" close=")" separator=",">
      #{item.id}
    </foreach>
  </delete>
</mapper>